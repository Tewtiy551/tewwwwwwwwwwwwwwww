local DontSelfKick = {
4100502369, 4100514735, 411503757, 417874585, 1827946230, 1948121920, 3224883664, 4100386422, 5610204920, 5610200624, 5601063676, 3462835050, 478812989, 417459666, 5369108614, 5369108654, 5369108676, 5369108666, 5369113988, 5369114008, 5369118339, 5369118366, 5369118372, 5369118323, 5369118424, 5369118322, 5369118367, 5369118350, 5369118743, 5369118794, 5369118742, 5369118755, 5369118769, 5369118771, 5369118777, 5369118780, 5369506968, 5369504847, 5369504846, 5369504870, 5369504968, 5369504964, 5369505002, 5369505016, 5369505097, 5369505118, 5369505141, 5369505140, 5369505149, 5369505162, 5369505166, 5369505213, 5369505216, 5369505224, 5369505243, 5369505242, 5369505259, 5369505283, 5369505298, 5369505316, 5369505307, 5369505324, 5369505305, 5369505325, 5369505336, 5369505361, 5369505376, 5369505370, 5369505371, 5369505383, 5369505390, 5369505399, 5369505398, 5369505444, 5369505441, 5369505451, 5369505458, 5369505488, 5369505500, 5369505503, 5369505506, 5369505534, 5369505583, 5369505580, 5369505581, 5369505622, 5369505681, 5369505733, 5369505747, 5369505827, 5369505877, 5369505928, 5369505956, 5369505967, 5369505970, 5369505974, 5369505981, 5369505984, 5369506009, 5369506017, 5369506035, 5369506023, 5369506059, 5369506068, 5369506064, 5369506079, 5369506080, 5369506088, 5369506086, 5369506093, 5369506098, 5369506108, 5369506102, 5369506125, 5369506132, 5369506131, 5369506173, 5369506200, 5369506207, 5369506221, 5369506254, 5369506261, 5369506280, 5369506281, 5369506297, 5369506295, 5369506302, 5369506305, 5369506307, 5369506326, 5369506378, 5369506546, 5369506583, 5369506613, 5369506601, 5369506634, 5369506636, 5369506651, 5369506660, 5369506661, 5369506677, 5369506675, 5369506695, 5369506730, 5369506747, 5369506767, 5369506764, 5369506783, 5369506801, 5369506816, 5369506821, 5369506826, 5369506827, 5369506840, 5369506859, 5369506864, 5369506870, 5369506889, 5369506913, 5369506946, 5369506957, 5369506983, 5369506988, 5369506991, 5369506997, 5369507002, 5369507015, 5369507027, 5369507026, 5369507043, 5369507052, 5369129214, 5369129275, 5369129315, 5369129413, 5369129479, 5369129635, 5369129690, 5369129689, 5369129739, 5369129770, 5369129832, 5369129833, 5369129942, 5369129953, 5369129960, 5369130009, 5369130065, 5369130645, 5369131974, 5369131970, 5369131983, 5369132011, 5369132015, 5369132025, 5369132030, 5369132033, 5369132041, 5369132062, 5369132086, 5369132101, 5369132102, 5369132119, 5369132133, 5369132141, 5369132150, 5369132166, 5369132167, 5369132183, 5369132194, 5369132206, 5369132207, 5369132234, 5369132258, 5369132293, 5369132294, 5369132298, 5369132302, 5369132316, 5369132334, 5369132348, 5369132371, 5369132370, 5369132376, 5369132384, 5369132397, 5369132388, 5369132396, 5369132403, 5369132409, 5369132426, 5369132438, 5369132431, 5369132448, 5369132457, 5369132476, 5369132490, 5369132495, 5369132494, 5369132497, 5369132507, 5369132537, 5369132536, 5369132556, 5369132557, 5369132582, 5369132566, 5369132565, 5369132585, 5369132616, 5369132607, 5369132640, 5369132648, 5369132660, 5369132673, 5369132662, 5369132702, 5369132709, 5369132730, 5369132733, 5369132763, 5369132777, 5369132785, 5369132796, 5369132807, 5369132809, 5369132814, 5369132836, 5369132843, 5369132866, 5369132877, 5369132878, 5369132891, 5369132903, 5369132915, 5369132920, 5369132942, 5369132970, 5369132984, 5369132990, 5369132995, 5369133003, 5369133017, 5369133016, 5369133028, 5369133027, 5369133035, 5369133046, 5369133069, 5369133079, 5369133095, 5369133114, 5369133117, 5369133122, 5369133124, 5369133166, 5369133171, 5369133169, 5369133197, 5369133203, 5369133224, 5369133234, 5369133251, 5369133270, 5369133282, 5369133302, 5369133317, 5369133315, 5369133325, 5369133327, 5369133330, 5369133353, 5369133368, 5369133376, 5369133381, 5369133392, 5369133399, 5369133424, 5369133430, 5369133437, 5369133452, 5369133451, 5369133448, 5369133464, 5369133450, 5369133517, 5369133523, 5369133553, 5369133549, 5369133558, 5369133564, 5369133578, 5369133616, 5369133619, 5369133622, 5369133663, 5369133684, 5369133700, 5369133722, 5369133730, 5369133755, 5369133765, 5369133782, 5369133783, 5369133809, 5369133810, 5369133835, 5369133836, 5369133843, 5369133853, 5369133851, 5369133882, 5369133887, 5369133899, 5369133907, 5369133917, 5369133943, 5369133947, 5369133946, 5369135099, 5369135117, 5369135125, 5369135127, 5369135140, 5369135168, 5369135172, 5369135175, 5369135192, 5369135198, 5369135225, 5369135242, 5369135240, 5369135249, 5369135256, 5369135314, 5369135338, 5369135349, 5369135361, 5369135372, 5369135370, 5369135383, 5369135404, 5369135408, 5369135410, 5369135419, 5369135443, 5369135461, 5369135473, 5369135479, 5369135485, 5369135513, 5369135518, 5369135542, 5369135551, 5369135554, 5369135559, 5369135569, 353748271, 5670026834, 507575034, 2330043002, 3985440643, 53579671, 358708656, 1512256088, 1336448239, 5505242302, 5754049892, 2622451839, 5832418676, 6003832553, 353748271, 3983962123, 403905336, 5802001495, 5801998022, 5802004349, 5802003521, 5802009011, 5802009806, 5802011412, 5802013563, 5802017187, 5796910010, 5796907902, 5796909634, 5796909274, 5796921778, 5796924011, 5796928229, 5796923279, 5796927317, 5796926262, 5796926900, 5796902943, 5796902714, 7025532624, 7025518900, 7025531780, 7025522289, 7025529190, 7025526909, 7025539715, 7025528948, 7025548109, 7025539026, 7025557544, 119158158, 5670026834, 507575034, 3985440643, 1498746, 2330043002, 358708656, 53579671, 5505290442
}

local toggleActive = false

local function shouldKick(player)
    for _, id in ipairs(DontSelfKick) do
        if player.UserId == id then
            return false
        end
    end
    return true
end

local function onKeyPress(input, gameProcessed)
    if not gameProcessed then
        local focusedTextBox = game:GetService("UserInputService"):GetFocusedTextBox()
        if not focusedTextBox and input.KeyCode == Enum.KeyCode.J then
            toggleActive = not toggleActive
            game.StarterGui:SetCore("SendNotification", {
                Title = "Notification",
                Text = "Script is now " .. (toggleActive and "active" or "inactive"),
                Icon = "",
                Duration = 1
            })
            
            -- Check current players when toggling the script on
            if toggleActive then
                for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and shouldKick(player) then
                        game.Players.LocalPlayer:Kick("Fake king!")
                    end
                end
            end
        end
    end
end

game:GetService("UserInputService").InputBegan:Connect(onKeyPress)

game:GetService("Players").PlayerAdded:Connect(function(player)
    if toggleActive and shouldKick(player) then
        game.Players.LocalPlayer:Kick("Fake king!")
    end
end)
